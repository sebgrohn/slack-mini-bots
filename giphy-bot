#!/usr/bin/env ruby
# encoding: utf-8

require 'net/http'
require 'slack-notifier'

require_relative 'slack_common'

# TODO remove hardcoded message parameters username, icon and message contents;
#      maybe use a base JSON message file as template and insert GIF?

def get_response(uri, limit = 10)
  response = Net::HTTP.get_response(uri)
  case response
  when Net::HTTPRedirection
    if limit == 0
      response
    else
      get_response(URI.parse(response['location']), limit - 1)
    end
  else
    response
  end
end

config    = get_slack_config
channel   = get_slack_channel(ARGV[2], ARGV[1])
slack_url = get_slack_url(ARGV[2], ARGV[3])

tags = ARGV[0].split(' ')
url  = "http://api.giphy.com/v1/gifs/random?api_key=#{config['giphy_api_key']}&rating=g&tag=#{tags.join('+')}"

puts "Getting #{url}"

response = get_response(URI.parse(url))
result   = JSON.parse(response.body)

STDERR.puts "Error: No result."               or exit 1 if (result['data'] or []) == []
STDERR.puts "Error: #{result['meta']['msg']}" or exit 1 if result['meta']['status'] != 200
puts "Showing #{result['data']['url']}."

icon = 'birthday'
icon = 'koala'     if tags.include? 'koala'
icon = 'hamburger' if tags.include?('burger') || tags.include?('hamburger') || tags.include?('cheeseburger')
icon = 'coffee'    if tags.include? 'coffee'

notifier = Slack::Notifier.new slack_url, channel: channel, username: "#{tags.map(&:capitalize).join}Bot", icon_emoji: ":#{icon}:"
notifier.ping "*<#{result['data']['url']}|#{tags.map(&:capitalize).join '-'} Time!>*"
